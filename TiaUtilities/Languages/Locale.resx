<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ALARM_CONFIG_COIL2_TYPE" xml:space="preserve">
    <value>Coil 2 Type</value>
  </data>
  <data name="ALARM_CONFIG_COIL_TYPE_COIL" xml:space="preserve">
    <value>Coil</value>
  </data>
  <data name="ALARM_CONFIG_COIL_TYPE_NONE" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="ALARM_CONFIG_COIL_TYPE_RESET" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ALARM_CONFIG_COIL_TYPE_SET" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="ALARM_CONFIG_DEFAULTS" xml:space="preserve">
    <value>Field default Values</value>
  </data>
  <data name="ALARM_CONFIG_DEFAULTS_COIL1" xml:space="preserve">
    <value>Coil 1</value>
  </data>
  <data name="ALARM_CONFIG_DEFAULTS_COIL2" xml:space="preserve">
    <value>Coil 2</value>
  </data>
  <data name="ALARM_CONFIG_DEFAULTS_TIMER" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="GENERICS_ADDRESS" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="GENERICS_TYPE" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="GENERICS_VALUE" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="GENERICS_FILE" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="GENERICS_LOAD" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="GENERICS_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="GENERICS_NUMBER" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="GENERICS_SAVE" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="GENERICS_SAVE_AS" xml:space="preserve">
    <value>SaveAs</value>
  </data>
  <data name="GENERICS_COMMENT" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="GENERICS_CONFIGURATION" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="GENERICS_ACCEPT" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="GENERICS_CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="GENERICS_CLEAR" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="IO_GEN_EXCELIMPORT_IO_NAME" xml:space="preserve">
    <value>IO Name</value>
  </data>
  <data name="IO_GEN_EXCELIMPORT_STARTING_ROW" xml:space="preserve">
    <value>Starting row</value>
  </data>
  <data name="IO_GEN_EXCELIMPORT_EXPRESSION" xml:space="preserve">
    <value>JS Expressione
for row validation</value>
  </data>
  <data name="IO_GEN_EXCELIMPORT_IMPORT" xml:space="preserve">
    <value>Import Excel</value>
  </data>
  <data name="ALARM_CONFIG_FC" xml:space="preserve">
    <value>FC</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION" xml:space="preserve">
    <value>Generation</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_ANTI_SLIP" xml:space="preserve">
    <value>Anti-Slip</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_ANTI_SLIP_AMOUNT" xml:space="preserve">
    <value>Group Size</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_ANTI_SLIP_GEN_EMPTY" xml:space="preserve">
    <value>Generate Empty</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_EMPTY" xml:space="preserve">
    <value>Generation Empty</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_EMPTY_ALARM_ADDRESS" xml:space="preserve">
    <value>Alarm Address</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_EMPTY_ANTI_SLIP" xml:space="preserve">
    <value>Generate in anti-slip</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_EMPTY_NUM" xml:space="preserve">
    <value>Num. at end</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_EMPTY_TIMER" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_EMPTY_TIMER_ADDRESS" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_EMPTY_TIMER_TYPE" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_EMPTY_TIMER_VALUE" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_FORMAT" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_SKIP" xml:space="preserve">
    <value>Skip after each group</value>
  </data>
  <data name="ALARM_CONFIG_GENERATION_START_NUM" xml:space="preserve">
    <value>Starting Num.</value>
  </data>
  <data name="ALARM_CONFIG_GROUPING_TYPE" xml:space="preserve">
    <value>Grouping type</value>
  </data>
  <data name="ALARM_CONFIG_GROUPING_TYPE_GROUP" xml:space="preserve">
    <value>GroupPerSegment</value>
  </data>
  <data name="ALARM_CONFIG_GROUPING_TYPE_ONE" xml:space="preserve">
    <value>OnePerSegment</value>
  </data>
  <data name="ALARM_CONFIG_PARTITION_TYPE" xml:space="preserve">
    <value>Partition type</value>
  </data>
  <data name="ALARM_CONFIG_PARTITION_TYPE_ALARM_TYPE" xml:space="preserve">
    <value>AlarmType</value>
  </data>
  <data name="ALARM_CONFIG_PARTITION_TYPE_DEVICE" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="ALARM_CONFIG_PREFIX" xml:space="preserve">
    <value>Field Prefixes</value>
  </data>
  <data name="ALARM_CONFIG_PREFIX_ALARM" xml:space="preserve">
    <value>Alarm Address</value>
  </data>
  <data name="ALARM_CONFIG_PREFIX_COIL1" xml:space="preserve">
    <value>Coil 1 Address</value>
  </data>
  <data name="ALARM_CONFIG_PREFIX_COIL2" xml:space="preserve">
    <value>Coil 2 Address</value>
  </data>
  <data name="ALARM_CONFIG_PREFIX_TIMER" xml:space="preserve">
    <value>Timer Address</value>
  </data>
  <data name="ALARM_CONFIG_SEGMENT_NAME" xml:space="preserve">
    <value>Segment Names</value>
  </data>
  <data name="ALARM_CONFIG_SEGMENT_NAME_GROUP_EACH" xml:space="preserve">
    <value>Groupped</value>
  </data>
  <data name="ALARM_CONFIG_SEGMENT_NAME_GROUP_EACH_EMPTY" xml:space="preserve">
    <value>Groupped(Empty)</value>
  </data>
  <data name="ALARM_CONFIG_SEGMENT_NAME_ONE_EACH" xml:space="preserve">
    <value>One each</value>
  </data>
  <data name="ALARM_CONFIG_SEGMENT_NAME_ONE_EACH_EMPTY" xml:space="preserve">
    <value>One each(Empty)</value>
  </data>
  <data name="ALARM_CONFIG_TEXT_LIST" xml:space="preserve">
    <value>Alarm Text List</value>
  </data>
  <data name="ALARM_CONFIG_TEXT_LIST_EMPTY" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="ALARM_CONFIG_TEXT_LIST_FULL" xml:space="preserve">
    <value>Full</value>
  </data>
  <data name="ALARM_DATA_ALM_VARIABLE" xml:space="preserve">
    <value>Alarm Variable</value>
  </data>
  <data name="ALARM_DATA_CUSTOM_VAR_ADDR" xml:space="preserve">
    <value>Custom Variable</value>
  </data>
  <data name="ALARM_DATA_CUSTOM_VAR_VALUE" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ALARM_DATA_COIL1_ADDRESS" xml:space="preserve">
    <value>Coil1 Address</value>
  </data>
  <data name="ALARM_DATA_COIL1_TYPE" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ALARM_DATA_COIL2_TYPE" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ALARM_DATA_COIL2_ADDRESS" xml:space="preserve">
    <value>Coil2 Address</value>
  </data>
  <data name="ALARM_DATA_DESCRIPTION" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ALARM_DATA_ENABLE" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="ALARM_DATA_TIMER_ADDRESS" xml:space="preserve">
    <value>Timer Address</value>
  </data>
  <data name="ALARM_DATA_TIMER_TYPE" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ALARM_DATA_TIMER_VALUE" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="ALARM_GEN_FORM" xml:space="preserve">
    <value>Alarms generator. Project file: {file_path}</value>
  </data>
  <data name="DEVICE_DATA_DESCRIPTION" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DEVICE_DATA_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ALARM_CONFIG_COIL1_TYPE" xml:space="preserve">
    <value>Coil 1 Type</value>
  </data>
  <data name="GRID_PREFERENCES" xml:space="preserve">
    <value>Grid Preferences</value>
  </data>
  <data name="GRID_PREFERENCES_DRAGGED_CELL_BACK" xml:space="preserve">
    <value>Dragged cell background</value>
  </data>
  <data name="GRID_PREFERENCES_DRAG_TRIANGLE_COLOR" xml:space="preserve">
    <value>Drag triangle</value>
  </data>
  <data name="GRID_PREFERENCES_PREVIEW_FORE" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="GRID_PREFERENCES_SELECTED_CELL_BORDER" xml:space="preserve">
    <value>Selected cell border</value>
  </data>
  <data name="GRID_SCRIPT_JS_EXPRESSION" xml:space="preserve">
    <value>Javascript Expression</value>
  </data>
  <data name="GRID_SCRIPT_JSON_CONTEXT" xml:space="preserve">
    <value>JSON Context</value>
  </data>
  <data name="GRID_SCRIPT_VARIABLES" xml:space="preserve">
    <value>Variables: </value>
  </data>
  <data name="GRID_SCRIPT_EXECUTE_ONE_LINE" xml:space="preserve">
    <value>Execute on selected line</value>
  </data>
  <data name="GRID_SCRIPT_EXECUTE_ALL" xml:space="preserve">
    <value>Execute on all lines</value>
  </data>
  <data name="GRID_SCRIPT_AUTO_FORMAT" xml:space="preserve">
    <value>Format Code</value>
  </data>
  <data name="GRID_SCRIPT_OPEN_JAVASCRIPT_CONTEXT" xml:space="preserve">
    <value>Open Javascript executed</value>
  </data>
  <data name="GRID_FIND_SEARCH_COMPLETED" xml:space="preserve">
    <value>Search completed</value>
  </data>
  <data name="GRID_FIND_REPLACE_ALL_COMPLETED" xml:space="preserve">
    <value>Search completed. Replaced {count} values.</value>
  </data>
  <data name="GRID_FIND_REPLACE_ALL_BUTTON" xml:space="preserve">
    <value>ReplaceAll</value>
  </data>
  <data name="GRID_FIND_REPLACE_BUTTON" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="GRID_FIND_MATCH_CASE_CHECKBOX" xml:space="preserve">
    <value>Match Case</value>
  </data>
  <data name="GRID_FIND_FIND_BUTTON" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="GRID_FIND_FORM_NAME" xml:space="preserve">
    <value>Grid - Find and Replace</value>
  </data>
  <data name="IO_CONFIG_GROUPING_TYPE" xml:space="preserve">
    <value>Grouping Type</value>
  </data>
  <data name="IO_CONFIG_GROUPING_TYPE_BIT" xml:space="preserve">
    <value>GroupEachBit</value>
  </data>
  <data name="IO_CONFIG_GROUPING_TYPE_BYTE" xml:space="preserve">
    <value>GroupEachByte</value>
  </data>
  <data name="IO_CONFIG_MEMORY_TYPE" xml:space="preserve">
    <value>Memory Type</value>
  </data>
  <data name="IO_CONFIG_MEMORY_TYPE_DB" xml:space="preserve">
    <value>DB</value>
  </data>
  <data name="IO_CONFIG_MEMORY_TYPE_MERKER" xml:space="preserve">
    <value>Merker</value>
  </data>
  <data name="IO_DATA_ADDRESS" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="IO_DATA_NEGATED" xml:space="preserve">
    <value>Negated</value>
  </data>
  <data name="IO_DATA_COMMENT" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="IO_DATA_IO_NAME" xml:space="preserve">
    <value>IO Tag</value>
  </data>
  <data name="IO_DATA_MERKER_ADDRESS" xml:space="preserve">
    <value>Merker Address</value>
  </data>
  <data name="IO_DATA_VARIABLE" xml:space="preserve">
    <value>Variable</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_DB" xml:space="preserve">
    <value>Alias DB</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_DB_GENERATED_DEFINED_VARIABLES" xml:space="preserve">
    <value>Genera Defined variables</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_DB_IN_DEFAULT" xml:space="preserve">
    <value>Default Input value</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_DB_OUT_DEFAULT" xml:space="preserve">
    <value>Default Output value</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_TABLE" xml:space="preserve">
    <value>Alias Table</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_TABLE_INPUT_VARIABLE" xml:space="preserve">
    <value>Input Variable</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_TABLE_NEW_EVERY" xml:space="preserve">
    <value>New every n° bit</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_TABLE_OUTPUT_VARIABLE" xml:space="preserve">
    <value>Output Variable</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_TABLE_VARIABLE_DEFAULT" xml:space="preserve">
    <value>Default Value</value>
  </data>
  <data name="IO_GEN_CONFIG_ALIAS_TABLE_VARIABLE_START_ADDRESS" xml:space="preserve">
    <value>Start Address</value>
  </data>
  <data name="IO_GEN_CONFIG_FC" xml:space="preserve">
    <value>Alias FC</value>
  </data>
  <data name="IO_GEN_CONFIG_IO_TABLE" xml:space="preserve">
    <value>IN/OUT Table</value>
  </data>
  <data name="IO_GEN_CONFIG_IO_TABLE_DEFAULT_NAME" xml:space="preserve">
    <value>Default tag name</value>
  </data>
  <data name="IO_GEN_CONFIG_IO_TABLE_NEW_EVERY" xml:space="preserve">
    <value>New every n° bit</value>
  </data>
  <data name="IO_GEN_CONFIG_SEGMENT" xml:space="preserve">
    <value>Segment Name</value>
  </data>
  <data name="IO_GEN_CONFIG_SEGMENT_BIT_DIVISION" xml:space="preserve">
    <value>Division per bit</value>
  </data>
  <data name="IO_GEN_CONFIG_SEGMENT_BYTE_DIVISION" xml:space="preserve">
    <value>Division per byte</value>
  </data>
  <data name="IO_GEN_FORM_NAME" xml:space="preserve">
    <value>Input/Output alias generator. Project file: {file_path}</value>
  </data>
  <data name="IO_GEN_FORM_IMPEXP" xml:space="preserve">
    <value>Import/Export</value>
  </data>
  <data name="IO_GEN_FORM_IMPEXP_EXPORT_XML" xml:space="preserve">
    <value>Export XML</value>
  </data>
  <data name="IO_GEN_FORM_IMPEXP_IMPORT_EXCEL" xml:space="preserve">
    <value>Import Excel</value>
  </data>
  <data name="IO_GEN_FORM_IMPEXP_IMPORT_SUGGESTION" xml:space="preserve">
    <value>Import Suggestions From DB or Tag table</value>
  </data>
  <data name="IO_GEN_FORM_IMPEXP_IMPORT_IO" xml:space="preserve">
    <value>Import IO from Tag table</value>
  </data>
  <data name="IO_SUGGESTION_DATA_VALUE" xml:space="preserve">
    <value>Prompt</value>
  </data>
  <data name="MAIN_FORM" xml:space="preserve">
    <value>Tia Utilities</value>
  </data>
  <data name="MAIN_FORM_LANGUAGE" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="MAIN_FORM_TIA_VERSION" xml:space="preserve">
    <value>TIA Portal Version</value>
  </data>
  <data name="MAIN_FORM_TOP_ALARM_GENERATOR" xml:space="preserve">
    <value>Alarm Generator</value>
  </data>
  <data name="MAIN_FORM_TOP_DB_DUPLICATION" xml:space="preserve">
    <value>DB Duplication</value>
  </data>
  <data name="MAIN_FORM_TOP_FILE_AUTO_SAVE" xml:space="preserve">
    <value>AutoSave (s)</value>
  </data>
  <data name="MAIN_FORM_TOP_IO_GENERATION" xml:space="preserve">
    <value>Alias Generator</value>
  </data>
  <data name="ALARM_CONFIG_COIL_TYPE_NCOIL" xml:space="preserve">
    <value>N-Coil</value>
  </data>
  <data name="ALARM_CONFIG_DEFAULTS_CUSTOM_VAR" xml:space="preserve">
    <value>Custom variable</value>
  </data>
  <data name="ALARM_CONFIG_ENABLE_CUSTOM_VAR" xml:space="preserve">
    <value>Enable custom variable</value>
  </data>
  <data name="ALARM_CONFIG_ENABLE_TIMER" xml:space="preserve">
    <value>Enable timer</value>
  </data>
  <data name="DEVICE_DATA_TEMPLATE" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="ALARM_TEMPLATE_FORM" xml:space="preserve">
    <value>Template Configurator</value>
  </data>
  <data name="ALARM_TEMPLATE_SELECT_TEMPLATE" xml:space="preserve">
    <value>Select Template</value>
  </data>
  <data name="ALARM_CONFIG_EDIT_TEMPLATE" xml:space="preserve">
    <value>Edit Template</value>
  </data>
  <data name="CONFIRM_DELETE_DIALOG_CAPTION" xml:space="preserve">
    <value>Delete confirmation</value>
  </data>
  <data name="CONFIRM_DELETE_DIALOG_TEXT" xml:space="preserve">
    <value>Are you sure you want to delete {delete_item}?</value>
  </data>
  <data name="CONFIG_LINE_TRANSFER_TO_OTHERS" xml:space="preserve">
    <value>Transfer values to all others configurations</value>
  </data>
  <data name="CONFIG_LINE_SAVE_DEFAULT_TOOLTIP" xml:space="preserve">
    <value>Save actual configuration as default</value>
  </data>
</root>